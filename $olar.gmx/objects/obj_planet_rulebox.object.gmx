<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Terrain Generator
map_center_x = 360;
map_center_y = 360;

tiles_water = 0;
tiles_land = 0;
tiles_forrest = 0;

//Setting all land as water
n = 1;

var inst = instance_position(map_center_x,map_center_y, obj_tile) // counting for inital tile
if inst != noone
            {
                inst.is_water = 1;
            }

for(R = 1; R &lt;= 6; R += 1;)
{
    
    r = R -1; //Useful for some math

    for (n = 0; n &lt;= (2*r); n += 1;)
        {
            
            a = map_center_x - 40*r + 40*(n);
            b = map_center_y - 40*R;
            var inst = instance_position(a,b, obj_tile)
            
            if inst != noone
            {
                inst.is_water = 1;
                tiles_water += 1;
            }
        }
    
    for (n = 0; n &lt;= (2*r + 2); n += 1;)
        {
            
            a = map_center_x + 40*R;
            b = map_center_y - 40*R + 40*(n);
            var inst = instance_position(a,b, obj_tile)
            
            if inst != noone
            {
                inst.is_water = 1;
                tiles_water += 1;
            }
        }
    
    for (n = 0; n &lt;= (2*r); n += 1;)
        {
            
            a = map_center_x + 40*r - 40*(n);
            b = map_center_y + 40*R;
            var inst = instance_position(a,b, obj_tile)
            
            if inst != noone
            {
                inst.is_water = 1;
                tiles_water += 1;
            }
        }
    
    for (n = 0; n &lt;= (2*r + 2); n += 1;)
        {
            
            a = map_center_x - 40*R;
            b = map_center_y + 40*R - 40*(n);
            var inst = instance_position(a,b, obj_tile)
            
            if inst != noone
            {
                inst.is_water = 1;
                tiles_water += 1;
            }
        }        
        
}


//Setting land
while(tiles_land &lt; tiles_water*0.4) //later on we can calucalte tge actual number of water tiles
{
    n = 1;
    
    bomb_centre_x = map_center_x - 40*5 + irandom(10)*40;
    bomb_centre_y = map_center_y - 40*5 + irandom(10)*40;
    
    var inst = instance_position(bomb_centre_x,bomb_centre_y, obj_tile) // counting for inital tile
    if inst != noone
                {
                    inst.is_water = 0;
                    inst.is_land = 1;
                        tiles_land += 1;
                }
    
    for(R = 1; R &lt;= 1; R += 1;)
    {
        
        r = R -1; //Useful for some math
    
        for (n = 0; n &lt;= (2*r); n += 1;)
            {
                
                a = bomb_centre_x - 40*r + 40*(n);
                b = bomb_centre_y - 40*R;
                var inst = instance_position(a,b, obj_tile)
                
                if inst != noone
                {
                    inst.is_water = 0;
                    inst.is_land = 1;
                        tiles_land += 1;
                }
            }
        
        for (n = 0; n &lt;= (2*r + 2); n += 1;)
            {
                
                a = bomb_centre_x + 40*R;
                b = bomb_centre_y - 40*R + 40*(n);
                var inst = instance_position(a,b, obj_tile)
                
                if inst != noone
                {
                    inst.is_water = 0;
                    inst.is_land = 1;
                        tiles_land += 1;
                }
            }
        
        for (n = 0; n &lt;= (2*r); n += 1;)
            {
                
                a = bomb_centre_x + 40*r - 40*(n);
                b = bomb_centre_y + 40*R;
                var inst = instance_position(a,b, obj_tile)
                
                if inst != noone
                {
                    inst.is_water = 0;
                    inst.is_land = 1;
                        tiles_land += 1;
                }
            }
        
        for (n = 0; n &lt;= (2*r + 2); n += 1;)
            {
                
                a = bomb_centre_x - 40*R;
                b = bomb_centre_y + 40*R - 40*(n);
                var inst = instance_position(a,b, obj_tile)
                
                if inst != noone
                {
                    inst.is_water = 0;
                    inst.is_land = 1;
                        tiles_land += 1;
                }
            }        
            
    }
}

//Forrestry
while(tiles_forrest &lt; tiles_land*0.1)
{

    for(i = 0; i &lt;= 10; i += 1;)
    {
        for(j = 0; j &lt;= 10; j += 1;)
        {
               
                a = map_center_x - 40*5 + 40*(i);
                b = map_center_y - 40*5 + 40*(j);
                var inst = instance_position(a,b, obj_tile)
                
                if inst != noone
                {
                    if(inst.is_land = 1)
                    {
                        var rand = irandom(100);
                        if(rand = 42)
                        {
                            inst.is_forrest = 1;
                            tiles_forrest += 1;
                        }
                    }
                }    
        }
    }
}
    



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
